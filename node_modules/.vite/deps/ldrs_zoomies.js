import {
  __publicField
} from "./chunk-DC5AMYBS.js";

// node_modules/ldrs/dist/lib/LdrsBaseElement.js
var t = class extends HTMLElement {
  constructor() {
    super();
    __publicField(this, "_propsToUpgrade", {});
    __publicField(this, "shadow");
    __publicField(this, "template");
    __publicField(this, "defaultProps");
    __publicField(this, "isAttached", false);
    this.shadow = this.attachShadow({ mode: "open" }), this.template = document.createElement("template");
  }
  storePropsToUpgrade(t3) {
    t3.forEach((t4) => {
      this.hasOwnProperty(t4) && void 0 !== this[t4] && (this._propsToUpgrade[t4] = this[t4], delete this[t4]);
    });
  }
  upgradeStoredProps() {
    Object.entries(this._propsToUpgrade).forEach(([t3, e]) => {
      this.setAttribute(t3, e);
    });
  }
  reflect(t3) {
    t3.forEach((t4) => {
      Object.defineProperty(this, t4, { set(e) {
        "string,number".includes(typeof e) ? this.setAttribute(t4, e.toString()) : this.removeAttribute(t4);
      }, get() {
        return this.getAttribute(t4);
      } });
    });
  }
  applyDefaultProps(t3) {
    this.defaultProps = t3, Object.entries(t3).forEach(([t4, e]) => {
      this[t4] = this[t4] || e.toString();
    });
  }
};

// node_modules/ldrs/dist/elements/zoomies.js
var t2 = ':host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-stroke);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:center;border-radius:calc(var(--uib-stroke)/2);display:flex;height:var(--uib-stroke);justify-content:center;overflow:hidden;position:relative;transform:translateZ(0);width:var(--uib-size)}.container:before{left:0;opacity:var(--uib-bg-opacity);position:absolute;top:0}.container:after,.container:before{background-color:var(--uib-color);content:"";height:100%;transition:background-color .3s ease;width:100%}.container:after{animation:zoom var(--uib-speed) ease-in-out infinite;border-radius:calc(var(--uib-stroke)/2);transform:translateX(-100%)}@keyframes zoom{0%{transform:translateX(-100%)}to{transform:translateX(100%)}}';
var s = class extends t {
  constructor() {
    super();
    __publicField(this, "_attributes", ["size", "color", "speed", "stroke", "bg-opacity"]);
    __publicField(this, "size");
    __publicField(this, "color");
    __publicField(this, "speed");
    __publicField(this, "stroke");
    __publicField(this, "bg-opacity");
    this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);
  }
  static get observedAttributes() {
    return ["size", "color", "speed", "stroke", "bg-opacity"];
  }
  connectedCallback() {
    this.upgradeStoredProps(), this.applyDefaultProps({ size: 80, color: "black", speed: 1.4, stroke: 5, "bg-opacity": 0.1 }), this.template.innerHTML = `
      <div class="container"></div>
      <style>
        :host{
          --uib-size: ${this.size}px;
          --uib-color: ${this.color};
          --uib-speed: ${this.speed}s;
          --uib-stroke: ${this.stroke}px;
          --uib-bg-opacity: ${this["bg-opacity"]};
        }
        ${t2}
      </style>
    `, this.shadow.replaceChildren(this.template.content.cloneNode(true));
  }
  attributeChangedCallback() {
    const e = this.shadow.querySelector("style");
    e && (e.innerHTML = `
      :host{
        --uib-size: ${this.size}px;
        --uib-color: ${this.color};
        --uib-speed: ${this.speed}s;
        --uib-stroke: ${this.stroke}px;
        --uib-bg-opacity: ${this["bg-opacity"]};
      }
      ${t2}
    `);
  }
};
var i = { register: (e = "l-zoomies") => {
  customElements.get(e) || customElements.define(e, class extends s {
  });
}, element: s };

// node_modules/ldrs/dist/auto/zoomies.js
i.register();
//# sourceMappingURL=ldrs_zoomies.js.map
